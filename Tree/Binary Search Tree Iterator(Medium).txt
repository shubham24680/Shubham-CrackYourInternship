/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class BSTIterator {
    TreeNode root;
    public BSTIterator(TreeNode root) { 
        this.root = root;   
    }
    
    public int next() {
        int val;
        TreeNode temp = root;
        if(temp.left == null) {
            val = temp.val;
            root = root.right;
        }
        else {
            while(temp.left.left != null)
                temp = temp.left;
            val = temp.left.val;
            temp.left = temp.left.right;
        }

        return val;
    }
    
    public boolean hasNext() {
        return (root != null);
    }
}

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator obj = new BSTIterator(root);
 * int param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */