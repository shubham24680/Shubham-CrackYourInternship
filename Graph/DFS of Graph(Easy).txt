

class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        
        ArrayList<Integer> list = new ArrayList<>();
        boolean[] visited = new boolean[V];
        
        for(int i = 0; i < V; i++) {
            if(!visited[i])
                traverse(adj, i, list, visited);
        }
        
        return list;
    }
    
    public void traverse(ArrayList<ArrayList<Integer>> adj, int node, ArrayList<Integer> list, boolean[] visited) {
        visited[node] = true;
        list.add(node);
        
        for(int i = 0; i < adj.get(node).size(); i++) {
            if(!visited[adj.get(node).get(i)])
                traverse(adj, adj.get(node).get(i), list, visited);
        }
    }
}