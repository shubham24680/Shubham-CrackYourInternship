class Solution
{
    public static int d = 256;
    public static int q = 101;
    ArrayList<Integer> search(String pat, String S)
    {
        // your code here
        ArrayList<Integer> count = new ArrayList<>();
        int i, j, p = 0, t = 0, h = 1, n = S.length(), m = pat.length();
        for(i = 0; i < (m - 1); i++) {
            h = (h * d) % q;
            // System.out.println(h);
        }
        
        for(i = 0; i < m; i++) {
            p = (d * p + pat.charAt(i)) % q;
            t = (d * t + S.charAt(i)) % q;
            // System.out.println(p + " " + t);
        }
        
        for(i = 0; i <= (n - m); i++) {
            if(p == t) {
                for(j = 0; j < m; j++)
                    if(S.charAt(i + j) != pat.charAt(j))
                        break;
                        
                if(j == m)
                    count.add(i + 1);
            }
            
            if(i < (n - m)) {
                t = (d * (t - S.charAt(i) * h) + S.charAt(i + m)) % q;
                if(t < 0)
                    t = (t + q);
            }
        }
        
        if(count.isEmpty())
            count.add(-1);
        return count;
    }
}